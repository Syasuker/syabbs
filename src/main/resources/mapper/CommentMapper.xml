<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- 命名空间 -->
<mapper namespace="cn.sya.bbs.dao.CommentDao">

    <resultMap type="cn.sya.bbs.entity.Comment" id="commentResultMap">
        <result property="id" column="comment_id"/>
        <result property="postID" column="post_id"/>
        <result property="status" column="comment_status"/>
        <result property="body" column="comment_body"/>
        <result property="createTime" column="comment_create_time"/>
        <result property="modifyTime" column="comment_last_modify_time"/>
        
        <association property="user" column="user_id" javaType="cn.sya.bbs.entity.User">
            <id property="id" column="user_id"/>
            <result property="name" column="user_name"/>
            <result property="password" column="user_password"/>
            <result property="mobile" column="user_mobile"/>
            <result property="token" column="user_token"/>
        </association>
    </resultMap>

	<insert id="saveComment" parameterType="cn.sya.bbs.entity.Comment">
		INSERT
		INTO 
			cn_comment
			(comment_id,post_id,user_id,comment_status,comment_body,comment_create_time,comment_last_modify_time)
		VALUES
			(#{id},#{postID},#{user.id},#{status},#{body},#{createTime},#{modifyTime})
	</insert>
	
	<!-- 
	 * @param id
	 * @param postID
	 * @param user
	 * @param status
	 * @param body
	 * @param createTime
	 * @param modifyTime
	 
comment_id
post_id
user_id
comment_status
comment_body
comment_create_time
comment_last_modify_time

	 -->
	 
	<select id="findPostById" parameterType="string"
		resultMap="commentResultMap">
		SELECT
			p.post_id,
			p.plate_id,
			p.user_id ,
			p.post_status,
			p.post_title,
			p.post_body ,
			p.post_create_time ,
			p.post_last_modify_time ,
			u.user_name,
			u.user_mobile,
			u.user_password,
			u.user_token,
			u.user_id
		FROM
			cn_post p 
			LEFT OUTER JOIN cn_user u 
			ON p.user_id = u.user_id 
		WHERE
			p.post_id = #{post_id};
	</select>
	
	
	<!-- 
	comment_id
post_id
user_id
comment_status
comment_body
comment_create_time
comment_last_modify_time
	
	| id                                            
	| body                
	| modTime       
	| author 
	-->
	<select id="listCommnetByPostID" parameterType="String" resultType="java.util.Map">
	    SELECT 
	        c.comment_id AS id,
	    	<!-- c.post_id AS post_id, -->
			c.comment_body AS body,
			c.comment_last_modify_time AS modTime,
			u.user_name AS author
	    FROM 
	        cn_comment c 
			LEFT OUTER JOIN cn_user u 
			ON c.user_id = u.user_id 
	    WHERE 
	        c.post_id=#{post_id} AND c.comment_status="1"
	    ORDER BY 
	        c.comment_last_modify_time ASC
	</select>
	
<!-- 
	<select id="findUserById" parameterType="string"
		resultType="cn.tedu.note.entity.User">
		SELECT
		cn_user_id as id,
		cn_user_name as name,
		cn_user_password as password,
		cn_user_token as token,
		cn_user_nick as nick
		FROM
		cn_user
		WHERE
		cn_user_id = #{id}
	</select>
	<update id="updataUser" parameterType="cn.tedu.note.entity.User">
		UPDATE
			cn_user
		SET
			cn_user_id=#{id},
			cn_user_name=#{name},
			cn_user_password=#{password},
			cn_user_token=#{token},
			cn_user_nick=#{nick}
		WHERE
			cn_user_id = #{id}
	</update>

	<delete id="deleteUser" parameterType="string">
		DELETE FROM cn_user WHERE
		cn_user_id = #{id}
	</delete>
 -->	
</mapper>